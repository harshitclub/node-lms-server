generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  INSTRUCTOR
  STUDENT
  INDIVIDUAL
}

enum AccountType {
  ADMIN
  COMPANY
  EMPLOYEE
  INDIVIDUAL
}

enum Status {
  ACTIVE
  INACTIVE
  BLOCKED
}

model User {
  id          String      @id @default(uuid())
  firstName   String
  lastName    String?
  email       String      @unique
  phone       String? // Make optional if not always required
  username    String?     @unique // Make optional if not always required
  empID       String?
  accountType AccountType @default(INDIVIDUAL)
  status      Status      @default(ACTIVE)

  // Address Information (Consolidated)
  addressLine1 String?
  addressLine2 String?
  city         String?
  state        String?
  postalCode   String?
  country      String?

  // Company/Institute Information (Conditional)
  companyName   String?
  instituteName String?

  gstin   String?
  website String?

  role                Role      @default(INDIVIDUAL)
  password            String
  isVerified          Boolean   @default(false)
  verificationToken   String?
  forgetPasswordToken String?
  lastLogin           DateTime?
  userAgent           String[]
  profilePicture      String?
  bio                 String?
  dateOfBirth         DateTime?

  socialLinks Json?

  // Contact Information (Alternative to separate fields)
  contactInfo Json? // Could store multiple phone numbers, social links, etc. if needed in the future

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
}

// use cascade to delete related fields in other schema
